pipeline {
         agent any
               stages {
                      stage('One') {
                              steps {
                                     echo 'Hi hello world universe'
                                  }
                      }
                      stage('two') {
                              steps {
                                     input('Do you want to Proceed')
                                  }
                      }
                      stage('three') {
                               when {
                                      not {
                                           branch "master"
                                        }
                                  }
                               steps {
                                       echo "Hello"
                                  }
                      }
                      stage('four') {
                                     parallel {
                                            stage('unit test') {
                                                                steps {
                                                                      echo "Running the unit test..."
                                                               }
                                        }
                                        stage('Integration test') {
                                                            agent {
                                                                  docker { 
                                                                          reusenode false
                                                                          image 'ubundu'
                                                                  }
                                                                }
                                                                steps {
                                                                      echo 'Running the integration test'
                                                                }
                                         }
                                      }
                      }
                      }
                      }
                      }
                                     
